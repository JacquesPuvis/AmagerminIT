@page
@using AmagerminIT.Models
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model CalendarModel

@inject Microsoft.AspNetCore.Identity.UserManager<User> UserManager

@{
    Layout = "Shared/_Layout";
    ViewData["Title"] = "Calendar";

    var daysInMonth = DateTime.DaysInMonth(Model.CurrentYear, Model.CurrentMonth);
    var firstDayOfMonth = new DateTime(Model.CurrentYear, Model.CurrentMonth, 1);
    var startDayOfWeek = (int)firstDayOfMonth.DayOfWeek;

    var prevMonth = Model.CurrentMonth == 1 ? 12 : Model.CurrentMonth - 1;
    var prevYear = Model.CurrentMonth == 1 ? Model.CurrentYear - 1 : Model.CurrentYear;

    var nextMonth = Model.CurrentMonth == 12 ? 1 : Model.CurrentMonth + 1;
    var nextYear = Model.CurrentMonth == 12 ? Model.CurrentYear + 1 : Model.CurrentYear;

    var currentUser = UserManager.GetUserAsync(User).Result;
}

<h2>
    <a asp-page="./Calendar" asp-route-CurrentYear="@prevYear" asp-route-CurrentMonth="@prevMonth">&#8592;</a>
    @firstDayOfMonth.ToString("MMMM yyyy")
    <a asp-page="./Calendar" asp-route-CurrentYear="@nextYear" asp-route-CurrentMonth="@nextMonth">&#8594;</a>
</h2>

<div style="display: grid; grid-template-columns: repeat(7, 1fr); gap: 5px; max-width: 420px;">
    @foreach (var day in Enum.GetValues(typeof(DayOfWeek)))
    {
        <div style="font-weight: bold; text-align: center;">@day.ToString().Substring(0, 3)</div>
    }
    @for (int i = 0; i < startDayOfWeek; i++)
    {
        <div></div>
    }
    @for (int day = 1; day <= daysInMonth; day++)
    {
        var date = new DateTime(Model.CurrentYear, Model.CurrentMonth, day);
        bool hasEvent = Model.Events.Any(e => e.Date.Date == date.Date);
        string background = hasEvent ? "background-color: lightgreen;" : "background-color: white;";
        <div class="calendar-day"
             data-date="@date.ToString("yyyy-MM-dd")"
             style="text-align:center; border:1px solid #ccc; padding:10px; cursor:pointer; @background">
            @day
        </div>
    }
</div>

@if (Model.SelectedDate != null)
{
    var selectedEvents = Model.Events.Where(e => e.Date.Date == Model.SelectedDate.Value.Date).ToList();
    <div id="popup" class="popup-overlay" style="display:block;">
        <div class="popup-content">
            <button id="closePopup" style="float:right;">X</button>
            <h3>Events on @Model.SelectedDate.Value.ToString("yyyy-MM-dd")</h3>

            @if (selectedEvents.Any())
            {
                <ul>
                @foreach (var evt in selectedEvents)
                {
                    <li>@evt.Title</li>
                }
                </ul>
            }
            else
            {
                <p>No events yet.</p>
            }

            @if (currentUser != null && currentUser.IsAdmin)
            {
                <form method="post" asp-page-handler="AddEvent">
                    <input type="hidden" asp-for="NewEvent.Date" value="@Model.SelectedDate.Value.ToString("yyyy-MM-dd")" />
                    <input type="text" asp-for="NewEvent.Title" placeholder="New event title" required />
                    <button type="submit">Add Event</button>
                </form>
            }
            
        </div>
    </div>
}

@section Styles {
<style>
    .popup-overlay {
        position: fixed;
        top: 0; left: 0; bottom: 0; right: 0;
        background: rgba(0,0,0,0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
    }
    .popup-content {
        background: white;
        padding: 20px;
        border-radius: 6px;
        width: 300px;
        position: relative;
        box-shadow: 0 2px 10px rgba(0,0,0,0.3);
    }
</style>
}

@section Scripts {
<script>
    document.querySelectorAll('.calendar-day').forEach(day => {
        day.addEventListener('click', () => {
            const date = day.getAttribute('data-date');
            const url = new URL(window.location.href);
            url.searchParams.set('SelectedDate', date);
            url.searchParams.set('CurrentMonth', '@Model.CurrentMonth');
            url.searchParams.set('CurrentYear', '@Model.CurrentYear');
            window.location.href = url.toString();
        });
    });

    document.getElementById('closePopup')?.addEventListener('click', () => {
        const url = new URL(window.location.href);
        url.searchParams.delete('SelectedDate');
        window.location.href = url.toString();
    });
</script>
}
